<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 加载属性文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/paoding/paoding-analyzer.properties</value>
                <value>classpath:config/profile/config.properties</value>
            </list>
        </property>
    </bean>

    <!-- 注解扫描包 -->
    <context:component-scan base-package="com.icinfo.springmvc.*.controller, com.icinfo.springmvc.*.config, com.icinfo.springmvc.client, com.icinfo.springmvc.*.service"/>
    <!-- 配置启用注解的方式 -->
    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>
    <!--在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
    会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，
    就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。-->

    <!-- 配置静态文件的路径位置 -->
    <mvc:resources mapping="/css/**" location="/WEB-INF/views/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/views/js/"/>

    <!-- 配置试图解析器：jsp -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 使用JSP页面进行输出 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!-- 指定了表示层的前缀 -->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!-- 指定了表示层的后缀 -->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--处理 @ResponseBody 中文乱码问题-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>
                                text/html;charset=UTF-8
                            </value>
                        </list>
                    </property>
                </bean>
                <!-- 启动JSON格式的配置 -->
                <bean id="jacksonMessageConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
</beans>